name: CI
on:
  - workflow_dispatch

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  job1:
    runs-on: ubuntu-latest
    name: build lab2 app and deploy to minikube
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Start minikube
      uses: medyagh/setup-minikube@latest
    - name: minikube test
      run: kubectl get pods -A
#    - name: Build image
#      run: |
#        export SHELL=/bin/bash
#        # point shell to minikube's docker-daemon
#        eval $(minikube -p minikube docker-env)
#
#        # build and tag image
#        docker build -f ./src/Dockerfile -t lab2 .
#
#        echo -n "verifying images:"
#        docker images
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
    - name: Log into the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.GHCR_USER }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Pull image and run test container
      run: |
        # point shell to minikube's docker-daemon
        eval $(minikube -p minikube docker-env)
        docker pull ghcr.io/${{ secrets.GHCR_USER }}/sre-lab2:main
        kubectl run test-pod --image=ghcr.io/${{ secrets.GHCR_USER }}/sre-lab2:main
        sleep 30
        kubectl get pods 
        kubectl describe pods test-pod
    - name: Deploy to minikube
      run: |
        # update yaml
        sed -i 's/GHCR_USER/${{secrets.GHCR_USER}}/' deploy-to-minikube.yaml
        kubectl apply -f deploy-to-minikube.yaml
        sleep 60
        kubectl get deployments
        kubectl get svc

    - name: Test service URLs
      run: |
        minikube service list
        SVC_URL=$(minikube service lab2-s --url)
        export SVC_URL
        echo "------------------opening the service------------------"
        curl ${SVC_URL}/store